{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","Helmet","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAIe,SAASA,EAAYC,GAAQ,IAGzCC,EAKGD,EALHC,gBACAC,EAIGF,EAJHE,iBACAC,EAGGH,EAHHG,iBACAC,EAEGJ,EAFHI,eACAC,EACGL,EADHK,OAGD,OACE,6BAEE,2BAAOC,KAAK,SAASC,UAAU,eAAeC,MAAOH,EAAQI,SAAUL,IAFzE,IAE2F,6BACzF,4BAAQG,UAAU,eAAeC,MAAON,EAAkBO,SAAUN,GACnEF,EAAgBS,KAAI,SAAAC,GAAM,OACzB,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,Q,WCZvCE,EAAW,yCA8EFC,MA5Ef,WAAgB,IAUXC,EAAUC,EAVA,EAEgCC,mBAAS,IAFzC,mBAEPhB,EAFO,KAEUiB,EAFV,OAG0BD,qBAH1B,mBAGPE,EAHO,KAGOC,EAHP,OAIsBH,qBAJtB,mBAIPI,EAJO,KAIKC,EAJL,OAK0BL,qBAL1B,mBAKPM,EALO,KAKOC,EALP,OAMcP,mBAAS,GANvB,mBAMPZ,EANO,KAMCoB,EAND,OAO0CR,oBAAS,GAPnD,mBAOPS,EAPO,KAOeC,EAPf,KAmDb,OAxCED,GACFV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAGvBK,qBAAU,WACTC,MAAMhB,GACLiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE3B,IAEFN,qBAAU,WACU,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IACjDS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAEzC,CAACF,EAAaE,IAeb,oCACC,kBAACkB,EAAA,EAAD,KACK,+BA3DI,uBA6DR,kDACA,kBAACxC,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,iBAAkB,SAAAqC,GAAC,OAAIpB,EAAgBoB,EAAEC,OAAOjC,QAChDJ,eAtBL,SAAgCoC,GAC/Bf,EAAUe,EAAEC,OAAOjC,OACnBmB,GAAwB,IAqBpBtB,OAAQW,IAER,yBAAKT,UAAU,sBAAf,KACA,kBAACR,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBmB,EAClBlB,iBAAkB,SAAAqC,GAAC,OAAIlB,EAAckB,EAAEC,OAAOjC,QAC9CJ,eAxBL,SAA8BoC,GAC5Bf,EAAUe,EAAEC,OAAOjC,OACnBmB,GAAwB,IAuBrBtB,OAAQU,MC5Ed2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6557f801.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function CurrencyRow(props) {\n  \n  const { \n  \tcurrencyOptions,\n  \tselectedCurrency,\n  \tonChangeCurrency,\n  \tonChangeAmount,\n  \tamount \n  } = props\n  \n  return (\n    <div>\n    \t\n      <input type=\"number\" className='form-control' value={amount} onChange={onChangeAmount}/> <br/>\n      <select className='form-control' value={selectedCurrency} onChange={onChangeCurrency}>\n      {currencyOptions.map(option =>(\n        <option key={option} value={option}>{option}</option>\n      \t))}\n      </select>\n    </div>\n  );\n}\n","import React,{useEffect,useState} from \"react\";\nimport \"./App.css\";\nimport CurrencyRow from \"./CurrencyRow\";\nimport { Helmet } from 'react-helmet'\n\nconst TITLE = 'Currency Converter'\n\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n\n\tconst [currencyOptions, setCurrencyOptions] = useState([])\n\tconst [fromCurrency, setFromCurrency] = useState()\n\tconst [toCurrency, setToCurrency] = useState()\n\tconst [exchangeRate, setExchangeRate] = useState()\n\tconst [amount, setAmount] = useState(1)\n\tconst [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\t// console.log(exchangeRate)\n\n\tlet toAmount, fromAmount\n\tif(amountInFromCurrency){\n\t\tfromAmount = amount\n\t\ttoAmount = amount * exchangeRate\n\t} else{\n\t\ttoAmount = amount\n\t\tfromAmount = amount / exchangeRate\n\t}\n\n\tuseEffect(()=>{\n\t\tfetch(BASE_URL)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tconst firstCurrency = Object.keys(data.rates)[0]\n\t\t\tsetCurrencyOptions([data.base, ...Object.keys(data.rates)])\n\t\t\tsetFromCurrency(data.base)\n\t\t\tsetToCurrency(firstCurrency)\n\t\t\tsetExchangeRate(data.rates[firstCurrency])\n\t\t})\n\t},[])\n\n\tuseEffect(()=>{\n\t\tif(fromCurrency != null && toCurrency != null){\n\t\t\tfetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => setExchangeRate(data.rates[toCurrency]))\n\t\t}\n\t},[fromCurrency,toCurrency])\n\n\tfunction handleFromAmountChange(e) {\n\t\tsetAmount(e.target.value)\n\t\tsetAmountInFromCurrency(true)\n\t\t\n\t}\n\t\n\tfunction handleToAmountChange(e) {\n\t\t\tsetAmount(e.target.value)\n\t\t\tsetAmountInFromCurrency(false)\n\t\t\t\n\t}\n\n  return (\n    <>\n    \t<Helmet>\n          <title>{ TITLE }</title>\n        </Helmet>\n      <h1>Currency Converter</h1>\n      <CurrencyRow \n      currencyOptions={currencyOptions}\n      selectedCurrency={fromCurrency}\n      onChangeCurrency={e => setFromCurrency(e.target.value)}\n      onChangeAmount={handleFromAmountChange}\n      amount={fromAmount}\n      />\n      <div className='equals text-center'>=</div>\n      <CurrencyRow \n      currencyOptions={currencyOptions}\n      selectedCurrency={toCurrency}\n      onChangeCurrency={e => setToCurrency(e.target.value)}\n      onChangeAmount={handleToAmountChange}\n      amount={toAmount}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}